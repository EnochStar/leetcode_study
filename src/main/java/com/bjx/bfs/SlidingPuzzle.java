package com.bjx.bfs;

/**
 * @author EnochStar
 * @title: SlidingPuzzle
 * @projectName leetcode_study
 * @description:
 * 在一个 2 x 3 的板上（board）有 5 块砖瓦，用数字 1~5 来表示, 以及一块空缺用 0 来表示.
 *
 * 一次移动定义为选择 0 与一个相邻的数字（上下左右）进行交换.
 *
 * 最终当板 board 的结果是 [[1,2,3],[4,5,0]] 谜板被解开。
 *
 * 给出一个谜板的初始状态，返回最少可以通过多少次移动解开谜板，如果不能解开谜板，则返回 -1 。
 *
 * 示例：
 *
 * 输入：board = [[1,2,3],[4,0,5]]
 * 输出：1
 * 解释：交换 0 和 5 ，1 步完成
 * 输入：board = [[1,2,3],[5,4,0]]
 * 输出：-1
 * 解释：没有办法完成谜板
 * 输入：board = [[4,1,2],[5,0,3]]
 * 输出：5
 * 解释：
 * 最少完成谜板的最少移动次数是 5 ，
 * 一种移动路径:
 * 尚未移动: [[4,1,2],[5,0,3]]
 * 移动 1 次: [[4,1,2],[0,5,3]]
 * 移动 2 次: [[0,1,2],[4,5,3]]
 * 移动 3 次: [[1,0,2],[4,5,3]]
 * 移动 4 次: [[1,2,0],[4,5,3]]
 * 移动 5 次: [[1,2,3],[4,5,0]]
 * 输入：board = [[3,2,4],[1,5,0]]
 * 输出：14
 *
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/sliding-puzzle
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 * @date 2021/2/26 14:52
 */
public class SlidingPuzzle {
    int[][] move = new int[][]{{1,3},{0,2,4},{1,5},{0,4},{1,3,5},{2,4}};
    public int slidingPuzzle(int[][] board) {
        char[] cs = new char[6];
        int index = 0;
        for(int[] rows : board) {
            for(int row : rows) {
                cs[index++] = (char)('0' + row);
            }
        }
        String s = new String(cs);
        String target = "123450";
        Deque<String> deque = new ArrayDeque();
        Set<String> visited = new HashSet();
        deque.offerFirst(s);
        int step = 0;
        while(!deque.isEmpty()) {
            int size = deque.size();
            while(size-- > 0) {
                String tmp = deque.pollFirst();
                if(tmp.equals(target)) return step;
                int zeroIdx = tmp.indexOf('0');
                for(int next : move[zeroIdx]) {
                    String newS = changeStr(tmp,zeroIdx,next);
                    if(!visited.contains(newS)) {
                        visited.add(newS);
                        deque.offerLast(newS);
                    }
                }
            }
            step++;
        }
        return -1;
    }
    public String changeStr(String s,int src,int tar) {
        char[] c = s.toCharArray();
        char tmp = c[src];
        c[src] = c[tar];
        c[tar] = tmp;
        return new String(c);
    }
}
